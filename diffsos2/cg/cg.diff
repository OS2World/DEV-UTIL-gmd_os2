*** m2c/Makefile	Sun Jul 25 13:47:54 1993
--- oldm2c/Makefile	Tue Nov 24 02:49:30 1992
***************
*** 1,35 ****
  BIN     = $(HOME)/bin
  LIB     = $(HOME)/lib
! OPTA    = -s -O -D__STDC__
! #OPTA    = -ggdb -D__STDC__
! OPTLIB  = -Zomf -Zsys -s -O -D__STDC__
! #OPTLIB  = -Zomf -Zsys -g -D__STDC__
! CC      = gcc
! 
!                 # binaries used
! OBJS    = cg.$(OBJ) Dialog.$(OBJ) Errors.$(OBJ) EvalC.$(OBJ) EvalC2.$(OBJ) EvalC3.$(OBJ) \
!           EvalMod.$(OBJ) EvalMod2.$(OBJ) EvalMod3.$(OBJ) GramC.$(OBJ) GramMod.$(OBJ) GramYacc.$(OBJ) \
!           Optimize.$(OBJ) Order.$(OBJ) Parser.$(OBJ) Positions.$(OBJ) Queue.$(OBJ) Scanner.$(OBJ) Semantics.$(OBJ) \
!           Tree.$(OBJ) Tree2.$(OBJ) TreeC1.$(OBJ) TreeC2.$(OBJ) TreeMod1.$(OBJ) TreeMod2.$(OBJ)
  
                  # C library (reuse)
  REUSE   = ../../reuse/m2c
  
                  # C libraries
! CLIBS   = -lreuse
  
                  # options for C compiler
! CFLAGS  = -I$(REUSE) $(OPT) -L$(REUSE)
  
  M2FLAGS = -c -d../../reuse/src
  
- all     :
- !IFNDEF OMF
-         nmake "OBJ=o" "OPT=$(OPTA)" "DEF=" cg
- !ELSE
-         nmake "OBJ=obj" "OPT=$(OPTLIB)" "DEF=cg.def" cg
- !ENDIF
  
  install:        cg cg.sh $(LIB)/cg
          if test $(LIB) = $(BIN); then echo error: BIN = LIB; false; else true; fi
          sed "s;LIB;$(LIB);g" < cg.sh > $(BIN)/cg
--- 1,22 ----
  BIN	= $(HOME)/bin
  LIB	= $(HOME)/lib
! OPT	= -O
! CC	= cc
  
                  # C library (reuse)
  REUSE	= ../../reuse/m2c
  
                  # C libraries
! CLIBS	= $(REUSE)/libreuse.a
  
                  # options for C compiler
! CFLAGS	= -w -I$(REUSE) $(OPT)
  
  M2FLAGS	= -c -d../../reuse/src
  
  
+ all	: cg
+ 
  install:	cg cg.sh $(LIB)/cg
  	if test $(LIB) = $(BIN); then echo error: BIN = LIB; false; else true; fi
  	sed "s;LIB;$(LIB);g" < cg.sh > $(BIN)/cg
***************
*** 52,71 ****
  
  # swap all byte pairs of the files Scanner.Tab and Parser.Tab
  
! bin.conv:       ..\..\os2tools\swapbytes.exe
!         ..\..\os2tools\swapbytes Scanner.Tab Scanner.New
!         mv Scanner.New Scanner.Tab
!         ..\..\os2tools\swapbytes Parser.Tab Parser.New
!         mv Parser.New Parser.Tab
! 
! ..\..\os2tools\swapbytes.exe:  ..\..\os2tools\swapbytes.c
!         $(CC) -o ..\..\os2tools\swapbytes.exe ..\..\os2tools\swapbytes.c
! 
! # bin.conv:
! #         dd conv=swab < Scanner.Tab > .Scanner.Tab; mv .Scanner.Tab Scanner.Tab
! #         dd conv=swab < Parser.Tab > .Parser.Tab; mv .Parser.Tab Parser.Tab
  
! # SYSTEM_       = SYSTEM_.$(OBJ)
  
  lint:
          lint $(CFLAGS) *.c
--- 39,49 ----
  
  # swap all byte pairs of the files Scanner.Tab and Parser.Tab
  
! bin.conv:
! 	dd conv=swab < Scanner.Tab > .Scanner.Tab; mv .Scanner.Tab Scanner.Tab
! 	dd conv=swab < Parser.Tab > .Parser.Tab; mv .Parser.Tab Parser.Tab
  
! # SYSTEM_	= SYSTEM_.o
  
  lint:
  	lint $(CFLAGS) *.c
***************
*** 77,332 ****
  Dialog.h        : Tree.h
  
  sources : Dialog.c
! Dialog.$(OBJ)        : Dialog.c Dialog.h
! Dialog.$(OBJ)        : Tree.h
! Dialog.$(OBJ)        : Order.h
! Dialog.$(OBJ)        : Tree.h
  
  sources : Errors.h
  Errors.h        : Positions.h
  
  sources : Errors.c
! Errors.$(OBJ)        : Errors.c Errors.h
! Errors.$(OBJ)        : Positions.h
  
  sources : EvalC.h
  EvalC.h : Tree.h
  
  sources : EvalC.c
! EvalC.$(OBJ) : EvalC.c EvalC.h
! EvalC.$(OBJ) : Tree.h
! EvalC.$(OBJ) : TreeC1.h
! EvalC.$(OBJ) : TreeC2.h
! EvalC.$(OBJ) : EvalC3.h
! EvalC.$(OBJ) : Tree.h
  
  sources : EvalC2.h
  EvalC2.h        : Tree.h
  
  sources : EvalC2.c
! EvalC2.$(OBJ)        : EvalC2.c EvalC2.h
! EvalC2.$(OBJ)        : Tree.h
! EvalC2.$(OBJ)        : TreeC2.h
! EvalC2.$(OBJ)        : EvalC.h
! EvalC2.$(OBJ)        : Tree.h
  
  sources : EvalC3.h
  EvalC3.h        : Tree.h
  
  sources : EvalC3.c
! EvalC3.$(OBJ)        : EvalC3.c EvalC3.h
! EvalC3.$(OBJ)        : Tree.h
! EvalC3.$(OBJ)        : TreeC1.h
! EvalC3.$(OBJ)        : TreeC2.h
! EvalC3.$(OBJ)        : EvalC.h
! EvalC3.$(OBJ)        : EvalC.h
! EvalC3.$(OBJ)        : Tree.h
  
  sources : EvalMod.h
  EvalMod.h       : Tree.h
  
  sources : EvalMod.c
! EvalMod.$(OBJ)       : EvalMod.c EvalMod.h
! EvalMod.$(OBJ)       : Tree.h
! EvalMod.$(OBJ)       : TreeMod1.h
! EvalMod.$(OBJ)       : TreeMod2.h
! EvalMod.$(OBJ)       : EvalMod3.h
! EvalMod.$(OBJ)       : Tree.h
  
  sources : EvalMod2.h
  EvalMod2.h      : Tree.h
  
  sources : EvalMod2.c
! EvalMod2.$(OBJ)      : EvalMod2.c EvalMod2.h
! EvalMod2.$(OBJ)      : Tree.h
! EvalMod2.$(OBJ)      : TreeMod2.h
! EvalMod2.$(OBJ)      : EvalMod.h
! EvalMod2.$(OBJ)      : Tree.h
  
  sources : EvalMod3.h
  EvalMod3.h      : Tree.h
  
  sources : EvalMod3.c
! EvalMod3.$(OBJ)      : EvalMod3.c EvalMod3.h
! EvalMod3.$(OBJ)      : Tree.h
! EvalMod3.$(OBJ)      : TreeMod1.h
! EvalMod3.$(OBJ)      : TreeMod2.h
! EvalMod3.$(OBJ)      : EvalMod.h
! EvalMod3.$(OBJ)      : EvalMod.h
! EvalMod3.$(OBJ)      : Tree.h
  
  sources : GramC.h
  GramC.h : Tree.h
  
  sources : GramC.c
! GramC.$(OBJ) : GramC.c GramC.h
! GramC.$(OBJ) : Tree.h
! GramC.$(OBJ) : TreeC2.h
! GramC.$(OBJ) : Tree.h
  
  sources : GramMod.h
  GramMod.h       : Tree.h
  
  sources : GramMod.c
! GramMod.$(OBJ)       : GramMod.c GramMod.h
! GramMod.$(OBJ)       : Tree.h
! GramMod.$(OBJ)       : TreeMod2.h
! GramMod.$(OBJ)       : Tree.h
  
  sources : GramYacc.h
  GramYacc.h      : Tree.h
  
  sources : GramYacc.c
! GramYacc.$(OBJ)      : GramYacc.c GramYacc.h
! GramYacc.$(OBJ)      : Tree.h
! GramYacc.$(OBJ)      : TreeC2.h
! GramYacc.$(OBJ)      : Tree.h
  
  sources : Optimize.h
  Optimize.h      : Tree.h
  
  sources : Optimize.c
! Optimize.$(OBJ)      : Optimize.c Optimize.h
! Optimize.$(OBJ)      : Tree.h
! Optimize.$(OBJ)      : Tree.h
! Optimize.$(OBJ)      : Order.h
  
  sources : Order.h
  Order.h : Tree.h
  
  sources : Order.c
! Order.$(OBJ) : Order.c Order.h
! Order.$(OBJ) : Tree.h
! Order.$(OBJ) : Queue.h
! Order.$(OBJ) : Tree.h
! Order.$(OBJ) : Optimize.h
! Order.$(OBJ) : Queue.h
! Order.$(OBJ) : Errors.h
  
  sources : Parser.h
  
  sources : Parser.c
! Parser.$(OBJ)        : Parser.c Parser.h
! Parser.$(OBJ)        : Scanner.h
! Parser.$(OBJ)        : Positions.h
! Parser.$(OBJ)        : Errors.h
! Parser.$(OBJ)        : Scanner.h
! Parser.$(OBJ)        : Positions.h
! Parser.$(OBJ)        : Tree.h
  
  sources : Positions.h
  
  sources : Positions.c
! Positions.$(OBJ)     : Positions.c Positions.h
  
  sources : Queue.h
  
  sources : Queue.c
! Queue.$(OBJ) : Queue.c Queue.h
  
  sources : Scanner.h
  Scanner.h       : Positions.h
  
  sources : Scanner.c
! Scanner.$(OBJ)       : Scanner.c Scanner.h
! Scanner.$(OBJ)       : Tree.h
! Scanner.$(OBJ)       : Positions.h
! Scanner.$(OBJ)       : Errors.h
  
  sources : Semantics.h
  Semantics.h     : Tree.h
  
  sources : Semantics.c
! Semantics.$(OBJ)     : Semantics.c Semantics.h
! Semantics.$(OBJ)     : Tree.h
! Semantics.$(OBJ)     : Positions.h
! Semantics.$(OBJ)     : Tree.h
! Semantics.$(OBJ)     : Errors.h
  
  sources : Tree.h
  Tree.h  : Positions.h
  
  sources : Tree.c
! Tree.$(OBJ)  : Tree.c Tree.h
! Tree.$(OBJ)  : Positions.h
! Tree.$(OBJ)  : Positions.h
! Tree.$(OBJ)  : Errors.h
  
  sources : Tree2.h
  Tree2.h : Tree.h
  
  sources : Tree2.c
! Tree2.$(OBJ) : Tree2.c Tree2.h
! Tree2.$(OBJ) : Positions.h
! Tree2.$(OBJ) : Tree.h
  
  sources : TreeC1.h
  TreeC1.h        : Tree.h
  
  sources : TreeC1.c
! TreeC1.$(OBJ)        : TreeC1.c TreeC1.h
! TreeC1.$(OBJ)        : Tree.h
! TreeC1.$(OBJ)        : TreeC2.h
! TreeC1.$(OBJ)        : Tree.h
  
  sources : TreeC2.h
  TreeC2.h        : Tree.h
  
  sources : TreeC2.c
! TreeC2.$(OBJ)        : TreeC2.c TreeC2.h
! TreeC2.$(OBJ)        : Tree.h
! TreeC2.$(OBJ)        : Tree.h
  
  sources : TreeMod1.h
  TreeMod1.h      : Tree.h
  
  sources : TreeMod1.c
! TreeMod1.$(OBJ)      : TreeMod1.c TreeMod1.h
! TreeMod1.$(OBJ)      : Tree.h
! TreeMod1.$(OBJ)      : TreeMod2.h
! TreeMod1.$(OBJ)      : Tree.h
  
  sources : TreeMod2.h
  TreeMod2.h      : Tree.h
  
  sources : TreeMod2.c
! TreeMod2.$(OBJ)      : TreeMod2.c TreeMod2.h
! TreeMod2.$(OBJ)      : Tree.h
! TreeMod2.$(OBJ)      : Tree.h
  
  sources : cg.c
! cg.$(OBJ)    : cg.c
! cg.$(OBJ)    : Errors.h
! cg.$(OBJ)    : Scanner.h
! cg.$(OBJ)    : Parser.h
! cg.$(OBJ)    : Tree.h
! cg.$(OBJ)    : Tree2.h
! cg.$(OBJ)    : Semantics.h
! cg.$(OBJ)    : Order.h
! cg.$(OBJ)    : Dialog.h
! cg.$(OBJ)    : GramMod.h
! cg.$(OBJ)    : TreeMod1.h
! cg.$(OBJ)    : EvalMod.h
! cg.$(OBJ)    : EvalMod2.h
! cg.$(OBJ)    : EvalMod3.h
! cg.$(OBJ)    : GramC.h
! cg.$(OBJ)    : GramYacc.h
! cg.$(OBJ)    : TreeC1.h
! cg.$(OBJ)    : EvalC.h
! cg.$(OBJ)    : EvalC2.h
! cg.$(OBJ)    : EvalC3.h
! 
! SYSTEM_.$(OBJ)       : SYSTEM_.c SYSTEM_.h
! 
! cg      : $(OBJS)
!         $(CC) $(CFLAGS) -o $*.exe $(OBJS) $(CLIBS) $(DEF)
  
  # TAIL
  
  clean   :
!         rm -f core *.$(OBJ)
  
! .SUFFIXES: .md .mi .h .c .$(OBJ)
  
  .mi.c:
          mtc $(M2FLAGS) $*.mi;
--- 55,362 ----
  Dialog.h	: Tree.h
  
  sources	: Dialog.c
! Dialog.o	: Dialog.c Dialog.h
! Dialog.o	: Tree.h
! Dialog.o	: Order.h
! Dialog.o	: Tree.h
  
  sources	: Errors.h
  Errors.h	: Positions.h
  
  sources	: Errors.c
! Errors.o	: Errors.c Errors.h
! Errors.o	: Positions.h
  
  sources	: EvalC.h
  EvalC.h	: Tree.h
  
  sources	: EvalC.c
! EvalC.o	: EvalC.c EvalC.h
! EvalC.o	: Tree.h
! EvalC.o	: TreeC1.h
! EvalC.o	: TreeC2.h
! EvalC.o	: EvalC3.h
! EvalC.o	: Tree.h
  
  sources	: EvalC2.h
  EvalC2.h	: Tree.h
  
  sources	: EvalC2.c
! EvalC2.o	: EvalC2.c EvalC2.h
! EvalC2.o	: Tree.h
! EvalC2.o	: TreeC2.h
! EvalC2.o	: EvalC.h
! EvalC2.o	: Tree.h
  
  sources	: EvalC3.h
  EvalC3.h	: Tree.h
  
  sources	: EvalC3.c
! EvalC3.o	: EvalC3.c EvalC3.h
! EvalC3.o	: Tree.h
! EvalC3.o	: TreeC1.h
! EvalC3.o	: TreeC2.h
! EvalC3.o	: EvalC.h
! EvalC3.o	: EvalC.h
! EvalC3.o	: Tree.h
  
  sources	: EvalMod.h
  EvalMod.h	: Tree.h
  
  sources	: EvalMod.c
! EvalMod.o	: EvalMod.c EvalMod.h
! EvalMod.o	: Tree.h
! EvalMod.o	: TreeMod1.h
! EvalMod.o	: TreeMod2.h
! EvalMod.o	: EvalMod3.h
! EvalMod.o	: Tree.h
  
  sources	: EvalMod2.h
  EvalMod2.h	: Tree.h
  
  sources	: EvalMod2.c
! EvalMod2.o	: EvalMod2.c EvalMod2.h
! EvalMod2.o	: Tree.h
! EvalMod2.o	: TreeMod2.h
! EvalMod2.o	: EvalMod.h
! EvalMod2.o	: Tree.h
  
  sources	: EvalMod3.h
  EvalMod3.h	: Tree.h
  
  sources	: EvalMod3.c
! EvalMod3.o	: EvalMod3.c EvalMod3.h
! EvalMod3.o	: Tree.h
! EvalMod3.o	: TreeMod1.h
! EvalMod3.o	: TreeMod2.h
! EvalMod3.o	: EvalMod.h
! EvalMod3.o	: EvalMod.h
! EvalMod3.o	: Tree.h
  
  sources	: GramC.h
  GramC.h	: Tree.h
  
  sources	: GramC.c
! GramC.o	: GramC.c GramC.h
! GramC.o	: Tree.h
! GramC.o	: TreeC2.h
! GramC.o	: Tree.h
  
  sources	: GramMod.h
  GramMod.h	: Tree.h
  
  sources	: GramMod.c
! GramMod.o	: GramMod.c GramMod.h
! GramMod.o	: Tree.h
! GramMod.o	: TreeMod2.h
! GramMod.o	: Tree.h
  
  sources	: GramYacc.h
  GramYacc.h	: Tree.h
  
  sources	: GramYacc.c
! GramYacc.o	: GramYacc.c GramYacc.h
! GramYacc.o	: Tree.h
! GramYacc.o	: TreeC2.h
! GramYacc.o	: Tree.h
  
  sources	: Optimize.h
  Optimize.h	: Tree.h
  
  sources	: Optimize.c
! Optimize.o	: Optimize.c Optimize.h
! Optimize.o	: Tree.h
! Optimize.o	: Tree.h
! Optimize.o	: Order.h
  
  sources	: Order.h
  Order.h	: Tree.h
  
  sources	: Order.c
! Order.o	: Order.c Order.h
! Order.o	: Tree.h
! Order.o	: Queue.h
! Order.o	: Tree.h
! Order.o	: Optimize.h
! Order.o	: Queue.h
! Order.o	: Errors.h
  
  sources	: Parser.h
  
  sources	: Parser.c
! Parser.o	: Parser.c Parser.h
! Parser.o	: Scanner.h
! Parser.o	: Positions.h
! Parser.o	: Errors.h
! Parser.o	: Scanner.h
! Parser.o	: Positions.h
! Parser.o	: Tree.h
  
  sources	: Positions.h
  
  sources	: Positions.c
! Positions.o	: Positions.c Positions.h
  
  sources	: Queue.h
  
  sources	: Queue.c
! Queue.o	: Queue.c Queue.h
  
  sources	: Scanner.h
  Scanner.h	: Positions.h
  
  sources	: Scanner.c
! Scanner.o	: Scanner.c Scanner.h
! Scanner.o	: Tree.h
! Scanner.o	: Positions.h
! Scanner.o	: Errors.h
  
  sources	: Semantics.h
  Semantics.h	: Tree.h
  
  sources	: Semantics.c
! Semantics.o	: Semantics.c Semantics.h
! Semantics.o	: Tree.h
! Semantics.o	: Positions.h
! Semantics.o	: Tree.h
! Semantics.o	: Errors.h
  
  sources	: Tree.h
  Tree.h	: Positions.h
  
  sources	: Tree.c
! Tree.o	: Tree.c Tree.h
! Tree.o	: Positions.h
! Tree.o	: Positions.h
! Tree.o	: Errors.h
  
  sources	: Tree2.h
  Tree2.h	: Tree.h
  
  sources	: Tree2.c
! Tree2.o	: Tree2.c Tree2.h
! Tree2.o	: Positions.h
! Tree2.o	: Tree.h
  
  sources	: TreeC1.h
  TreeC1.h	: Tree.h
  
  sources	: TreeC1.c
! TreeC1.o	: TreeC1.c TreeC1.h
! TreeC1.o	: Tree.h
! TreeC1.o	: TreeC2.h
! TreeC1.o	: Tree.h
  
  sources	: TreeC2.h
  TreeC2.h	: Tree.h
  
  sources	: TreeC2.c
! TreeC2.o	: TreeC2.c TreeC2.h
! TreeC2.o	: Tree.h
! TreeC2.o	: Tree.h
  
  sources	: TreeMod1.h
  TreeMod1.h	: Tree.h
  
  sources	: TreeMod1.c
! TreeMod1.o	: TreeMod1.c TreeMod1.h
! TreeMod1.o	: Tree.h
! TreeMod1.o	: TreeMod2.h
! TreeMod1.o	: Tree.h
  
  sources	: TreeMod2.h
  TreeMod2.h	: Tree.h
  
  sources	: TreeMod2.c
! TreeMod2.o	: TreeMod2.c TreeMod2.h
! TreeMod2.o	: Tree.h
! TreeMod2.o	: Tree.h
  
  sources	: cg.c
! all	: cg
! cg.o	: cg.c
! cg.o	: Errors.h
! cg.o	: Scanner.h
! cg.o	: Parser.h
! cg.o	: Tree.h
! cg.o	: Tree2.h
! cg.o	: Semantics.h
! cg.o	: Order.h
! cg.o	: Dialog.h
! cg.o	: GramMod.h
! cg.o	: TreeMod1.h
! cg.o	: EvalMod.h
! cg.o	: EvalMod2.h
! cg.o	: EvalMod3.h
! cg.o	: GramC.h
! cg.o	: GramYacc.h
! cg.o	: TreeC1.h
! cg.o	: EvalC.h
! cg.o	: EvalC2.h
! cg.o	: EvalC3.h
! 
! SYSTEM_.o	: SYSTEM_.c SYSTEM_.h
! 
! cg	: $(SYSTEM)	\
! 	cg.o	\
! 	EvalC3.o	\
! 	Tree.o	\
! 	Errors.o	\
! 	Positions.o	\
! 	EvalC.o	\
! 	TreeC2.o	\
! 	TreeC1.o	\
! 	EvalC2.o	\
! 	GramYacc.o	\
! 	GramC.o	\
! 	EvalMod3.o	\
! 	EvalMod.o	\
! 	TreeMod2.o	\
! 	TreeMod1.o	\
! 	EvalMod2.o	\
! 	GramMod.o	\
! 	Dialog.o	\
! 	Order.o	\
! 	Queue.o	\
! 	Optimize.o	\
! 	Semantics.o	\
! 	Tree2.o	\
! 	Parser.o	\
! 	Scanner.o	\
! ;	$(CC) $(CFLAGS) -o cg $(SYSTEM)	\
! 	cg.o	\
! 	EvalC3.o	\
! 	Tree.o	\
! 	Errors.o	\
! 	Positions.o	\
! 	EvalC.o	\
! 	TreeC2.o	\
! 	TreeC1.o	\
! 	EvalC2.o	\
! 	GramYacc.o	\
! 	GramC.o	\
! 	EvalMod3.o	\
! 	EvalMod.o	\
! 	TreeMod2.o	\
! 	TreeMod1.o	\
! 	EvalMod2.o	\
! 	GramMod.o	\
! 	Dialog.o	\
! 	Order.o	\
! 	Queue.o	\
! 	Optimize.o	\
! 	Semantics.o	\
! 	Tree2.o	\
! 	Parser.o	\
! 	Scanner.o	\
! 	$(CLIBS)
  
  # TAIL
  
  clean	:
! 	rm -f core *.o
  
! .SUFFIXES: .md .mi .h .c .o
  
  .mi.c:
  	mtc $(M2FLAGS) $*.mi;
***************
*** 334,338 ****
  .md.h:
          mtc $(M2FLAGS) $*.md;
  
! .c.$(OBJ):
!         $(CC) -c $(CFLAGS) -o $*.$(OBJ) $*.c
--- 364,368 ----
  .md.h:
  	mtc $(M2FLAGS) $*.md;
  
! .c.o:
! 	$(CC) $(CFLAGS) -c $*.c
