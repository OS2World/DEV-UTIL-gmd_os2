*** m2c/Makefile	Sun Jul 25 15:55:44 1993
--- oldm2c/Makefile	Thu Oct 15 11:29:46 1992
***************
*** 1,15 ****
  BIN     = $(HOME)/bin
  LIB     = $(HOME)/lib
! OPTA    = -s -O -D__STDC__
! #OPTA    = -ggdb -D__STDC__
! OPTLIB  = -Zomf -Zsys -s -O -D__STDC__
! #OPTLIB  = -Zomf -Zsys -g -D__STDC__
! CC      = gcc
! 
!                 # binaries used
! OBJS    = ell.$(OBJ) ArgCheck.$(OBJ) CodeC.$(OBJ) CodeM2.$(OBJ) Codes.$(OBJ) Derivable.$(OBJ) \
!           First.$(OBJ) Follow.$(OBJ) Info.$(OBJ) Parser.$(OBJ) Reachable.$(OBJ) Scanner.$(OBJ) \
!           Semantics.$(OBJ) SupC.$(OBJ) SupM2.$(OBJ) Table.$(OBJ) Tree.$(OBJ) Types.$(OBJ)
  
                  # C library (reuse)
  REUSE   = ../../reuse/m2c
--- 1,7 ----
  BIN	= $(HOME)/bin
  LIB	= $(HOME)/lib
! OPT	= -O
! CC	= cc
  
                  # C library (reuse)
  REUSE	= ../../reuse/m2c
***************
*** 18,36 ****
  COMMON  = ../../common/m2c
  
                  # C libraries
! CLIBS   = -lcommon -lreuse
  
                  # options for C compiler
! CFLAGS  = -I$(COMMON) -I$(REUSE) $(OPT) -L$(COMMON) -L$(REUSE)
  
  M2FLAGS = -c
  
! all     :
! !IFNDEF OMF
!         nmake "OBJ=o" "OPT=$(OPTA)" "DEF=" ell
! !ELSE
!         nmake "OBJ=obj" "OPT=$(OPTLIB)" "DEF=ell.def" ell
! !ENDIF
  
  install:        ell ell.sh $(LIB)/ell
          if test $(LIB) = $(BIN); then echo error: BIN = LIB; false; else true; fi
--- 10,23 ----
  COMMON	= ../../common/m2c
  
                  # C libraries
! CLIBS	= $(COMMON)/libcommon.a $(REUSE)/libreuse.a
  
                  # options for C compiler
! CFLAGS	= -w -I$(COMMON) -I$(REUSE) $(OPT)
  
  M2FLAGS	= -c
  
! all	: ell
  
  install:	ell ell.sh $(LIB)/ell
  	if test $(LIB) = $(BIN); then echo error: BIN = LIB; false; else true; fi
***************
*** 52,265 ****
  # swap all byte pairs of the file Scanner.Tab
  # reverse all BITSETs / INTEGERs of the files Parser.Tab CodeC.tab CodeM2.tab Semantics.tab
  
! bin.conv:       ..\..\os2tools\swapbytes.exe   ..\..\os2tools\swapwords.exe
!         ..\..\os2tools\swapbytes Scanner.Tab Scanner.New
!         mv Scanner.New Scanner.Tab
!         ..\..\os2tools\swapbytes Parser.Tab Parser.New
!         ..\..\os2tools\swapwords Parser.New Parser.Tab
!         del Parser.New
!         ..\..\os2tools\swapbytes CodeC.tab CodeC.New
!         ..\..\os2tools\swapwords CodeC.New CodeC.tab
!         del CodeC.New
!         ..\..\os2tools\swapbytes CodeM2.tab CodeM2.New
!         ..\..\os2tools\swapwords CodeM2.New CodeM2.tab
!         del CodeM2.New
!         ..\..\os2tools\swapbytes Semantics.tab Semantics.New
!         ..\..\os2tools\swapwords Semantics.New Semantics.tab
!         del Semantics.New
! 
! ..\..\os2tools\swapbytes.exe:  ..\..\os2tools\swapbytes.c
!         $(CC) -o ..\..\os2tools\swapbytes.exe ..\..\os2tools\swapbytes.c
! 
! ..\..\os2tools\swapwords.exe:  ..\..\os2tools\swapwords.c
!         $(CC) -o ..\..\os2tools\swapwords.exe ..\..\os2tools\swapwords.c
! 
! # bin.conv:       convert
! #         dd conv=swab < Scanner.Tab > .Scanner.Tab; mv .Scanner.Tab Scanner.Tab
! #         dd conv=swab < Parser.Tab | convert > .Parser.Tab; mv .Parser.Tab Parser.Tab
! #         dd conv=swab < CodeC.tab | convert > .CodeC.tab; mv .CodeC.tab CodeC.tab
! #         dd conv=swab < CodeM2.tab | convert > .CodeM2.tab; mv .CodeM2.tab CodeM2.tab
! #         dd conv=swab < Semantics.tab | convert > .Semantics.tab; mv .Semantics.tab Semantics.tab
! #
! # convert:        convert.c
! #         $(CC) -o convert convert.c
  
! # SYSTEM_       = SYSTEM_.$(OBJ)
  
  # HEAD
  
  sources : ArgCheck.h
  
  sources : ArgCheck.c
! ArgCheck.$(OBJ)      : ArgCheck.c ArgCheck.h
! ArgCheck.$(OBJ)      : Scanner.h
  
  sources : CodeC.h
  CodeC.h : Tree.h
  
  sources : CodeC.c
! CodeC.$(OBJ) : CodeC.c CodeC.h
! CodeC.$(OBJ) : Tree.h
! CodeC.$(OBJ) : ArgCheck.h
! CodeC.$(OBJ) : Codes.h
! CodeC.$(OBJ) : Scanner.h
! CodeC.$(OBJ) : Types.h
! CodeC.$(OBJ) : Tree.h
  
  sources : CodeM2.h
  CodeM2.h        : Tree.h
  
  sources : CodeM2.c
! CodeM2.$(OBJ)        : CodeM2.c CodeM2.h
! CodeM2.$(OBJ)        : Tree.h
! CodeM2.$(OBJ)        : ArgCheck.h
! CodeM2.$(OBJ)        : Codes.h
! CodeM2.$(OBJ)        : Scanner.h
! CodeM2.$(OBJ)        : Types.h
! CodeM2.$(OBJ)        : Tree.h
  
  sources : Codes.h
  
  sources : Codes.c
! Codes.$(OBJ) : Codes.c Codes.h
! Codes.$(OBJ) : Scanner.h
  
  sources : Derivable.h
  
  sources : Derivable.c
! Derivable.$(OBJ)     : Derivable.c Derivable.h
! Derivable.$(OBJ)     : Table.h
! Derivable.$(OBJ)     : Tree.h
! Derivable.$(OBJ)     : Types.h
  
  sources : First.h
  
  sources : First.c
! First.$(OBJ) : First.c First.h
! First.$(OBJ) : Derivable.h
! First.$(OBJ) : Scanner.h
! First.$(OBJ) : Table.h
! First.$(OBJ) : Types.h
! First.$(OBJ) : Tree.h
  
  sources : Follow.h
  
  sources : Follow.c
! Follow.$(OBJ)        : Follow.c Follow.h
! Follow.$(OBJ)        : Scanner.h
! Follow.$(OBJ)        : Table.h
! Follow.$(OBJ)        : Tree.h
! Follow.$(OBJ)        : Types.h
  
  sources : Info.h
  
  sources : Info.c
! Info.$(OBJ)  : Info.c Info.h
  
  sources : Nullable.h
  
  sources : Nullable.c
! Nullable.$(OBJ)      : Nullable.c Nullable.h
! Nullable.$(OBJ)      : Table.h
! Nullable.$(OBJ)      : Tree.h
! Nullable.$(OBJ)      : Types.h
  
  sources : Parser.h
  Parser.h        : Tree.h
  
  sources : Parser.c
! Parser.$(OBJ)        : Parser.c Parser.h
! Parser.$(OBJ)        : Scanner.h
! Parser.$(OBJ)        : Scanner.h
! Parser.$(OBJ)        : Tree.h
  
  sources : Reachable.h
  
  sources : Reachable.c
! Reachable.$(OBJ)     : Reachable.c Reachable.h
! Reachable.$(OBJ)     : Table.h
! Reachable.$(OBJ)     : Types.h
  
  sources : Scanner.h
  
  sources : Scanner.c
! Scanner.$(OBJ)       : Scanner.c Scanner.h
! Scanner.$(OBJ)       : ArgCheck.h
  
  sources : Semantics.h
  Semantics.h     : Tree.h
  
  sources : Semantics.c
! Semantics.$(OBJ)     : Semantics.c Semantics.h
! Semantics.$(OBJ)     : Tree.h
! Semantics.$(OBJ)     : ArgCheck.h
! Semantics.$(OBJ)     : Codes.h
! Semantics.$(OBJ)     : Derivable.h
! Semantics.$(OBJ)     : First.h
! Semantics.$(OBJ)     : Follow.h
! Semantics.$(OBJ)     : Reachable.h
! Semantics.$(OBJ)     : Scanner.h
! Semantics.$(OBJ)     : Table.h
! Semantics.$(OBJ)     : Tree.h
! Semantics.$(OBJ)     : Types.h
  
  sources : SupC.h
  
  sources : SupC.c
! SupC.$(OBJ)  : SupC.c SupC.h
! SupC.$(OBJ)  : ArgCheck.h
! SupC.$(OBJ)  : Tree.h
  
  sources : SupM2.h
  
  sources : SupM2.c
! SupM2.$(OBJ) : SupM2.c SupM2.h
! SupM2.$(OBJ) : ArgCheck.h
! SupM2.$(OBJ) : Tree.h
  
  sources : Table.h
  Table.h : Tree.h
  
  sources : Table.c
! Table.$(OBJ) : Table.c Table.h
! Table.$(OBJ) : Tree.h
! Table.$(OBJ) : Types.h
  
  sources : Tree.h
  
  sources : Tree.c
! Tree.$(OBJ)  : Tree.c Tree.h
! Tree.$(OBJ)  : Info.h
  
  sources : Types.h
  
  sources : Types.c
! Types.$(OBJ) : Types.c Types.h
  
  sources : ell.c
! ell.$(OBJ)   : ell.c
! ell.$(OBJ)   : ArgCheck.h
! ell.$(OBJ)   : CodeC.h
! ell.$(OBJ)   : CodeM2.h
! ell.$(OBJ)   : Info.h
! ell.$(OBJ)   : Parser.h
! ell.$(OBJ)   : Scanner.h
! ell.$(OBJ)   : Tree.h
! ell.$(OBJ)   : Semantics.h
! ell.$(OBJ)   : SupC.h
! ell.$(OBJ)   : SupM2.h
! 
! SYSTEM_.$(OBJ)       : SYSTEM_.c SYSTEM_.h
! 
! ell     : $(OBJS)
!         $(CC) $(CFLAGS) -o $*.exe $(OBJS) $(CLIBS)
  
  # TAIL
  
  clean   :
!         rm -f core *.$(OBJ) convert
  
! .SUFFIXES: .md .mi .h .c .$(OBJ)
  
  .mi.c:
          mtc $(M2FLAGS) $*.mi;
--- 39,268 ----
  # swap all byte pairs of the file Scanner.Tab
  # reverse all BITSETs / INTEGERs of the files Parser.Tab CodeC.tab CodeM2.tab Semantics.tab
  
! bin.conv:	convert
! 	dd conv=swab < Scanner.Tab > .Scanner.Tab; mv .Scanner.Tab Scanner.Tab
! 	dd conv=swab < Parser.Tab | convert > .Parser.Tab; mv .Parser.Tab Parser.Tab
! 	dd conv=swab < CodeC.tab | convert > .CodeC.tab; mv .CodeC.tab CodeC.tab
! 	dd conv=swab < CodeM2.tab | convert > .CodeM2.tab; mv .CodeM2.tab CodeM2.tab
! 	dd conv=swab < Semantics.tab | convert > .Semantics.tab; mv .Semantics.tab Semantics.tab
  
! convert:	convert.c
! 	$(CC) -o convert convert.c
  
+ # SYSTEM_	= SYSTEM_.o
+ 
  # HEAD
  
  sources	: ArgCheck.h
  
  sources	: ArgCheck.c
! ArgCheck.o	: ArgCheck.c ArgCheck.h
! ArgCheck.o	: Scanner.h
  
  sources	: CodeC.h
  CodeC.h	: Tree.h
  
  sources	: CodeC.c
! CodeC.o	: CodeC.c CodeC.h
! CodeC.o	: Tree.h
! CodeC.o	: ArgCheck.h
! CodeC.o	: Codes.h
! CodeC.o	: Scanner.h
! CodeC.o	: Types.h
! CodeC.o	: Tree.h
  
  sources	: CodeM2.h
  CodeM2.h	: Tree.h
  
  sources	: CodeM2.c
! CodeM2.o	: CodeM2.c CodeM2.h
! CodeM2.o	: Tree.h
! CodeM2.o	: ArgCheck.h
! CodeM2.o	: Codes.h
! CodeM2.o	: Scanner.h
! CodeM2.o	: Types.h
! CodeM2.o	: Tree.h
  
  sources	: Codes.h
  
  sources	: Codes.c
! Codes.o	: Codes.c Codes.h
! Codes.o	: Scanner.h
  
  sources	: Derivable.h
  
  sources	: Derivable.c
! Derivable.o	: Derivable.c Derivable.h
! Derivable.o	: Table.h
! Derivable.o	: Tree.h
! Derivable.o	: Types.h
  
  sources	: First.h
  
  sources	: First.c
! First.o	: First.c First.h
! First.o	: Derivable.h
! First.o	: Scanner.h
! First.o	: Table.h
! First.o	: Types.h
! First.o	: Tree.h
  
  sources	: Follow.h
  
  sources	: Follow.c
! Follow.o	: Follow.c Follow.h
! Follow.o	: Scanner.h
! Follow.o	: Table.h
! Follow.o	: Tree.h
! Follow.o	: Types.h
  
  sources	: Info.h
  
  sources	: Info.c
! Info.o	: Info.c Info.h
  
  sources	: Nullable.h
  
  sources	: Nullable.c
! Nullable.o	: Nullable.c Nullable.h
! Nullable.o	: Table.h
! Nullable.o	: Tree.h
! Nullable.o	: Types.h
  
  sources	: Parser.h
  Parser.h	: Tree.h
  
  sources	: Parser.c
! Parser.o	: Parser.c Parser.h
! Parser.o	: Scanner.h
! Parser.o	: Scanner.h
! Parser.o	: Tree.h
  
  sources	: Reachable.h
  
  sources	: Reachable.c
! Reachable.o	: Reachable.c Reachable.h
! Reachable.o	: Table.h
! Reachable.o	: Types.h
  
  sources	: Scanner.h
  
  sources	: Scanner.c
! Scanner.o	: Scanner.c Scanner.h
! Scanner.o	: ArgCheck.h
  
  sources	: Semantics.h
  Semantics.h	: Tree.h
  
  sources	: Semantics.c
! Semantics.o	: Semantics.c Semantics.h
! Semantics.o	: Tree.h
! Semantics.o	: ArgCheck.h
! Semantics.o	: Codes.h
! Semantics.o	: Derivable.h
! Semantics.o	: First.h
! Semantics.o	: Follow.h
! Semantics.o	: Reachable.h
! Semantics.o	: Scanner.h
! Semantics.o	: Table.h
! Semantics.o	: Tree.h
! Semantics.o	: Types.h
  
  sources	: SupC.h
  
  sources	: SupC.c
! SupC.o	: SupC.c SupC.h
! SupC.o	: ArgCheck.h
! SupC.o	: Tree.h
  
  sources	: SupM2.h
  
  sources	: SupM2.c
! SupM2.o	: SupM2.c SupM2.h
! SupM2.o	: ArgCheck.h
! SupM2.o	: Tree.h
  
  sources	: Table.h
  Table.h	: Tree.h
  
  sources	: Table.c
! Table.o	: Table.c Table.h
! Table.o	: Tree.h
! Table.o	: Types.h
  
  sources	: Tree.h
  
  sources	: Tree.c
! Tree.o	: Tree.c Tree.h
! Tree.o	: Info.h
  
  sources	: Types.h
  
  sources	: Types.c
! Types.o	: Types.c Types.h
  
  sources	: ell.c
! all	: ell
! ell.o	: ell.c
! ell.o	: ArgCheck.h
! ell.o	: CodeC.h
! ell.o	: CodeM2.h
! ell.o	: Info.h
! ell.o	: Parser.h
! ell.o	: Scanner.h
! ell.o	: Tree.h
! ell.o	: Semantics.h
! ell.o	: SupC.h
! ell.o	: SupM2.h
! 
! SYSTEM_.o	: SYSTEM_.c SYSTEM_.h
! 
! ell	: $(SYSTEM)	\
! 	ell.o	\
! 	SupM2.o	\
! 	Tree.o	\
! 	Info.o	\
! 	ArgCheck.o	\
! 	Scanner.o	\
! 	SupC.o	\
! 	Semantics.o	\
! 	Types.o	\
! 	Table.o	\
! 	Reachable.o	\
! 	Follow.o	\
! 	First.o	\
! 	Derivable.o	\
! 	Codes.o	\
! 	Parser.o	\
! 	CodeM2.o	\
! 	CodeC.o	\
! ;	$(CC) $(CFLAGS) -o ell $(SYSTEM)	\
! 	ell.o	\
! 	SupM2.o	\
! 	Tree.o	\
! 	Info.o	\
! 	ArgCheck.o	\
! 	Scanner.o	\
! 	SupC.o	\
! 	Semantics.o	\
! 	Types.o	\
! 	Table.o	\
! 	Reachable.o	\
! 	Follow.o	\
! 	First.o	\
! 	Derivable.o	\
! 	Codes.o	\
! 	Parser.o	\
! 	CodeM2.o	\
! 	CodeC.o	\
! 	$(CLIBS)
  
  # TAIL
  
  clean	:
! 	rm -f core *.o convert
  
! .SUFFIXES: .md .mi .h .c .o
  
  .mi.c:
  	mtc $(M2FLAGS) $*.mi;
***************
*** 267,271 ****
  .md.h:
          mtc $(M2FLAGS) $*.md;
  
! .c.$(OBJ):
!         $(CC) -c $(CFLAGS) -o $*.$(OBJ) $*.c
--- 270,274 ----
  .md.h:
  	mtc $(M2FLAGS) $*.md;
  
! .c.o:
! 	$(CC) $(CFLAGS) -c $*.c
